@model PagedList.IPagedList<SStore.Models.Product>
@using PagedList.Mvc;
@using PagedList;


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="container-xl container-fluid mt-2 mb-sm-5 mb-3">
    @* Breadcrumb *@
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home", new {area = ""})" class="breadcrumb-client"><i class="bi bi-house-door"></i> Home</a></li>
            <li class="breadcrumb-item breadcrumb-client-active">All Product</li>
        </ol>
    </nav>

    <div class=" d-none d-xxl-block">
        <div class="row">
            <div class="col">
                @using (Html.BeginForm("Index", "AllProduct", FormMethod.Get))
                {
                    <h5 class="mt-2">Category</h5>
                    <hr />
                    <div class="d-flex justify-content-between flex-wrap">
                        @foreach (var brand in ViewBag.ListCategory)
                        {
                            <div class="form-check me-3">
                                <input class="form-check-input" type="checkbox" onchange="this.form.submit()" name="CategoryFilter" value="@brand.CategoryName" id="flexCheckDefault">
                                <label class="form-check-label" for="flexCheckDefault">
                                    @brand.CategoryName
                                </label>
                            </div>
                        }
                    </div>
                    <h5 class="mt-2">Brand</h5>
                    <hr />
                    <div class="d-flex justify-content-between flex-wrap">
                        @foreach (var brand in ViewBag.ListBrand)
                        {
                            <div class="form-check me-3">
                                <input class="form-check-input" type="checkbox" onchange="this.form.submit()" name="BrandFilter" value="@brand.BrandName" id="flexCheckDefault">
                                <label class="form-check-label" for="flexCheckDefault">
                                    @brand.BrandName
                                </label>
                            </div>
                        }
                    </div>
                    <h5 class="mt-2">Price</h5>
                    <hr />
                    <div class="form-check p-0 d-flex justify-content-start align-items-center">
                        <span>From:&nbsp;</span>
                        <input class="form-control" type="text" name="LowPrice" value="0" id="flexCheckDefault">
                        <span>&nbsp;-&nbsp;</span>
                        <input class="form-control" type="text" name="HighPrice" value="0" id="flexCheckDefault">&nbsp;
                        <button type="submit" class="btn btn-outline-success">Search</button>
                    </div>
                }
            </div>
            <div class="col-9">
                <p class="mb-0">Showing @Model.FirstItemOnPage - @Model.LastItemOnPage of @Model.TotalItemCount products</p>
                <hr />
                <div class="d-flex flex-wrap justify-content-center">
                    @foreach (var item in Model)
                    {
                        <div class="card m-3 shadow" style="width: 18rem;">
                            <div class="image-hover img-overlay">
                                <a href="@Url.Action("Details", "AllProduct",  new { area = "", id = item.Id })" class="text-decoration-none">
                                    <figure>
                                        <img src="@Url.Content("~/Image/wp2461125.jpg")" class="card-img-top" alt="...">
                                        <div class="overlay">
                                            <div class="img-overlay-text">See details</div>
                                        </div>
                                    </figure>
                                </a>
                            </div>
                            <div class="card-body">
                                <h5 class="card-title text-truncate" title="@item.ProductName">@item.ProductName</h5>
                                <p class="card-text">@item.Price $</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    @if (item.Status != true)
                                    {
                                        <button class="btn btn-danger fw-bolder disabled">Sold out</button>
                                    }
                                    else
                                    {
                                        <a href="#" class="btn buy-now-button">Buy now</a>
                                        <a href="#" class="btn add-to-cart-button align-bottom">
                                            <p class="m-0 d-none d-sm-block">
                                                Add to cart &nbsp;<i class="bi bi-cart-plus"></i>
                                            </p>
                                            <i class="bi bi-cart-plus d-block d-sm-none"></i>
                                        </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="d-none d-xxl-block mt-4">
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"], HighPrice = Request.QueryString["HighPrice"], LowPrice = Request.QueryString["LowPrice"], BrandFilter = Request.QueryString["BrandFilter"], CategoryFilter = Request.QueryString["CategoryFilter"] }),
                        new PagedListRenderOptions()
                        {
                            LiElementClasses = new List<string> { "page-link" },
                            UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                            MaximumPageNumbersToDisplay = 8,
                            ContainerDivClasses = new List<string> { "d-flex", "justify-content-center" }
                        })
                </div>
            </div>
        </div>
    </div>

    <div class="d-block d-xxl-none">
        <p class="mb-0 text-end">Showing @Model.FirstItemOnPage - @Model.LastItemOnPage of @Model.TotalItemCount products</p>
        <hr />
        <div class="d-flex flex-wrap justify-content-center">
            @foreach (var item in Model)
            {
                <div class="card m-3 shadow" style="width: 17rem;">
                    <div class="image-hover img-overlay">
                        <a href="@Url.Action("Details", "AllProduct",  new { area = "", id = item.Id })" class="text-decoration-none">
                            <figure>
                                <img src="@Url.Content("~/Image/wp2461125.jpg")" class="card-img-top" alt="...">
                                <div class="overlay">
                                    <div class="img-overlay-text">See details</div>
                                </div>
                            </figure>
                        </a>
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-truncate" title="@item.ProductName">@item.ProductName</h5>
                        <p class="card-text">@item.Price $</p>
                        <div class="d-flex justify-content-between align-items-center">
                            @if (item.Status != true)
                            {
                                <button class="btn btn-danger fw-bolder disabled">Sold out</button>
                            }
                            else
                            {
                                <a href="#" class="btn buy-now-button">Buy now</a>
                                <a href="#" class="btn add-to-cart-button align-bottom">
                                    <p class="m-0 d-none d-md-block">
                                        Add to cart &nbsp;<i class="bi bi-cart-plus"></i>
                                    </p>
                                    <i class="bi bi-cart-plus d-block d-md-none"></i>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="d-none d-sm-block d-xxl-none mt-4">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"], HighPrice = Request.QueryString["HighPrice"], LowPrice = Request.QueryString["LowPrice"], BrandFilter = Request.QueryString["BrandFilter"], CategoryFilter = Request.QueryString["CategoryFilter"] }),
                  new PagedListRenderOptions()
                  {
                      LiElementClasses = new List<string> { "page-link" },
                      UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                      MaximumPageNumbersToDisplay = 5,
                      ContainerDivClasses = new List<string> { "d-flex", "justify-content-center" }
                  })
    </div>
    <div class="d-block d-sm-none mt-3">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"], HighPrice = Request.QueryString["HighPrice"], LowPrice = Request.QueryString["LowPrice"], BrandFilter = Request.QueryString["BrandFilter"], CategoryFilter = Request.QueryString["CategoryFilter"] }),
                  new PagedListRenderOptions()
                  {
                      LiElementClasses = new List<string> { "page-link" },
                      UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                      MaximumPageNumbersToDisplay = 3,
                      DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                      ItemSliceAndTotalFormat = "Showing items {0} through {1} of {2}.",
                      ContainerDivClasses = new List<string> { "d-flex", "justify-content-center" }
                  })
    </div>
    <div class="position-fixed top-50 end-0 translate-middle-y d-block d-xxl-none">
        <button class="btn sub-button" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasWithBothOptions" aria-controls="offcanvasWithBothOptions">
            <i class="bi bi-funnel"></i>
        </button>

    </div>
    <div class="offcanvas offcanvas-start" data-bs-scroll="true" tabindex="-1" id="offcanvasWithBothOptions" aria-labelledby="offcanvasWithBothOptionsLabel">
        <div class="offcanvas-header pb-0">
            <h4 class="offcanvas-title" id="offcanvasWithBothOptionsLabel">Filtre</h4>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        @using (Html.BeginForm("Index", "Product", FormMethod.Get))
        {
            <div class="offcanvas-body">
                <h5 class="mt-2">Category</h5>
                <hr />
                <div class="d-flex justify-content-between flex-wrap">
                    @foreach (var brand in ViewBag.ListCategory)
                    {
                        <div class="form-check me-3">
                            <input class="form-check-input" type="checkbox" onchange="this.form.submit()" name="CategoryFilter" value="@brand.CategoryName" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                @brand.CategoryName
                            </label>
                        </div>
                    }
                </div>
                <h5 class="mt-2">Brand</h5>
                <hr />
                <div class="d-flex justify-content-between flex-wrap">
                    @foreach (var brand in ViewBag.ListBrand)
                    {
                        <div class="form-check me-3">
                            <input class="form-check-input" type="checkbox" onchange="this.form.submit()" name="BrandFilter" value="@brand.BrandName" id="flexCheckDefault">
                            <label class="form-check-label" for="flexCheckDefault">
                                @brand.BrandName
                            </label>
                        </div>
                    }
                </div>
                <h5 class="mt-2">Price</h5>
                <hr />
                <div class="form-check p-0 d-flex justify-content-start align-items-center">
                    <span>From:&nbsp;</span>
                    <input class="form-control" type="text" name="LowPrice" value="0" id="flexCheckDefault">
                    <span>&nbsp;-&nbsp;</span>
                    <input class="form-control" type="text" name="HighPrice" value="0" id="flexCheckDefault">&nbsp;
                    <button type="submit" class="btn btn-outline-success">Search</button>
                </div>
            </div>
        }
    </div>
</div>

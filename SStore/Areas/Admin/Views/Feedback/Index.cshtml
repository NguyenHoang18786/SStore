@model PagedList.IPagedList<SStore.Models.Feedback>
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid my-2">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard", new { area = "Admin" })" class="breadcrumb-client">Dashboard</a></li>
            <li class="breadcrumb-item breadcrumb-client-active">Feedbacks</li>
        </ol>
    </nav>
    <h1 class="text-uppercase text-center admin-page-title">Customer Feedbacks</h1>
    <div class="row">
        <div class="col">
        </div>
        <div class="col-xxl-9 col-xl-10 col-lg-11 col-md-12">
            <div class="d-flex justify-content-between align-items-center">
                @using (Html.BeginForm("Index", "Feedback", FormMethod.Get))
                {
                    <form class="d-flex col-md-auto mb-2 justify-content-center mb-md-0">
                        <div class="d-flex align-items-center mb-2 mb-sm-0">
                            <input type="search" name="searchString" class="bd-search form-control me-1 form-control-dark" placeholder="search ..." />
                            <button class="btn btn-outline-success" type="submit">Search</button>
                        </div>
                    </form>
                }
                <p class="mb-0 d-none d-sm-block">Showing @Model.FirstItemOnPage - @Model.LastItemOnPage of @Model.TotalItemCount Feedbacks</p>
            </div>
            <p class="d-block d-sm-none mb-0">Showing @Model.FirstItemOnPage - @Model.LastItemOnPage of @Model.TotalItemCount Feedbacks</p>
            <div class="table-responsive">
                <table class="table table-bordered table-hover my-2">
                    <tr>
                        <th class="text-truncate">
                            <a href="@Url.Action("Index", new { sortOrder = ViewBag.TimeSortParm })" class="text-dark">
                                <i class="bi bi-sort-numeric-down"></i> Time
                            </a>
                        </th>
                        <th class="text-truncate">
                            <a href="@Url.Action("Index", new { sortOrder = ViewBag.TitleSortParm })" class="text-dark">
                                <i class="bi bi-sort-alpha-up"></i> Title
                            </a>
                        </th>
                        <th class="text-truncate">
                            Full Name
                        </th>
                        <th class="text-truncate">
                            Email
                        </th>
                        <th class="text-truncate">
                            Action
                        </th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="align-middle text-truncate" style="max-width:120px">
                                <p class="m-0 text-truncate text-secondary fst-italic" title="@item.CreateDate">@item.CreateDate</p>
                            </td>
                            <td class="align-middle text-truncate" style="max-width:200px">
                                <p class="m-0 text-truncate" title="@item.Title">@item.Title</p>
                            </td>
                            <td class="align-middle text-truncate" style="max-width:120px">
                                @if (@item.FullName == null)
                                {
                                    <p class="fst-italic m-0 text-secondary">...</p>
                                }
                                else
                                {
                                    <p class="m-0 text-truncate" title="@item.FullName">@item.FullName</p>
                                }
                            </td>
                            <td class="align-middle text-truncate" style="max-width: 180px">
                                @if (@item.Email == null)
                                {
                                    <p class="fst-italic m-0 text-secondary">...</p>
                                }
                                else
                                {
                                    <p class="m-0 text-truncate" title="@item.Email">@item.Email</p>
                                }
                            </td>
                            <td class="align-middle">
                                <div class="d-flex flex-nowrap">
                                    <a href="@Url.Action("Details", "Feedback", new{ id = item.Id })" class="btn detail-button me-2">
                                        <i class="bi bi-info-circle"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", "Feedback", new{ id = item.Id })" class="btn delete-button">
                                        <i class="bi bi-trash"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }

                </table>
            </div>
            <p class="mb-2">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>
            <div class="d-none d-lg-block">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"] }),
                          new PagedListRenderOptions()
                          {
                              LiElementClasses = new List<string> { "page-link" },
                              UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                              MaximumPageNumbersToDisplay = 8,
                          })
            </div>
            <div class="d-none d-sm-block d-lg-none">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"] }),
                          new PagedListRenderOptions()
                          {
                              LiElementClasses = new List<string> { "page-link" },
                              UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                              MaximumPageNumbersToDisplay = 5,
                          })
            </div>
            <div class="d-block d-sm-none">
                @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"] }),
                          new PagedListRenderOptions()
                          {
                              LiElementClasses = new List<string> { "page-link" },
                              UlElementClasses = new List<string> { "pagination pagination-sm", "d-flex", "flex-wrap" },
                              MaximumPageNumbersToDisplay = 3,
                              DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                              ItemSliceAndTotalFormat = "Showing items {0} through {1} of {2}.",
                          })
            </div>
        </div>
        <div class="col">
        </div>
    </div>
</div>

@model PagedList.IPagedList<SStore.Models.Slide>
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="container-fluid my-2">
    @* Breadcrumb *@
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard", new { area = "Admin" })" class="breadcrumb-client">Dashboard</a></li>
            <li class="breadcrumb-item breadcrumb-client-active">Slides</li>
        </ol>
    </nav>
    @* Page Title *@
    <h1 class="text-center my-3 admin-page-title text-uppercase">Slide Management</h1>

    @* Add new *@
    <a type="button" class="btn sub-button" href="@Url.Action("Create", "Slide", new { area = "Admin" })">
        <span class="sub-button-text">Add</span>
    </a>

    <div class="table-responsive">
        <table class="table table-bordered table-hover my-2">
            <tr>
                <th class="text-center">
                    ID
                </th>
                <th class="text-center">
                    Title
                </th>
                <th class="text-center">
                    Description
                </th>
                <th class="text-center">
                    Image
                </th>
                <th class="text-center">
                    Action
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="align-middle text-center">
                        @item.Id
                    </td>
                    <td class="align-middle text-center" style="min-width: 100px">
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td class="align-middle text-center" style="min-width: 200px">
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td class="align-middle text-center">
                        <img src="@Url.Content("~/Image/" + item.Image)" class="img-fluid product-image-management" style="height:100px; min-width:180px" />
                    </td>
                    <td class="align-middle">
                        <div class="d-flex flex-nowrap justify-content-center">
                            <a href="@Url.Action("Edit", "Slide", new{ id = item.Id })" class="btn edit-button me-2">
                                <i class="bi bi-pencil-square"></i>
                            </a>
                            <a href="@Url.Action("Delete", "Slide", new{ id = item.Id })" class="btn delete-button">
                                <i class="bi bi-trash"></i>
                            </a>
                        </div>
                    </td>
                </tr>
            }

        </table>
    </div>
    <p class="mb-2">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>
    <div class="d-none d-lg-block">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"] }),
                  new PagedListRenderOptions()
                  {
                      LiElementClasses = new List<string> { "page-link" },
                      UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                      MaximumPageNumbersToDisplay = 8,
                  })
    </div>
    <div class="d-none d-sm-block d-lg-none">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"] }),
                  new PagedListRenderOptions()
                  {
                      LiElementClasses = new List<string> { "page-link" },
                      UlElementClasses = new List<string> { "pagination", "d-flex", "flex-wrap" },
                      MaximumPageNumbersToDisplay = 5,
                  })
    </div>
    <div class="d-block d-sm-none">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = Request.QueryString["searchString"] }),
                  new PagedListRenderOptions()
                  {
                      LiElementClasses = new List<string> { "page-link" },
                      UlElementClasses = new List<string> { "pagination pagination-sm", "d-flex", "flex-wrap" },
                      MaximumPageNumbersToDisplay = 3,
                      DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                      ItemSliceAndTotalFormat = "Showing items {0} through {1} of {2}.",
                  })
    </div>
</div>

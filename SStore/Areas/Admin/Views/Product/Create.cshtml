@model SStore.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid my-2">
    <nav style="--bs-breadcrumb-divider: '>';" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard", new { area = "Admin" })" class="breadcrumb-client">Dashboard</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Product", new { area = "Admin" })" class="breadcrumb-client">Products</a></li>
            <li class="breadcrumb-item breadcrumb-client-active">Create</li>
        </ol>
    </nav>
    <h1 class="text-center my-3 admin-page-title text-uppercase">Add New Product</h1>

    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="d-flex justify-content-center">
            <div class="container-fluid" style="max-width:600px">
                <form>
                    <div class="mb-2">
                        <label for="Image" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Image, "Image")
                        </label>
                        <input class="form-control" type="file" name="Image" id="Image" accept="image/*">
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="ProductName" class="form-label fw-bold">
                            @Html.LabelFor(model => model.ProductName, "Product Name")<span class="fw-normal text-danger">*</span>
                        </label>
                        @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="CategoryId" class="form-label fw-bold">
                            @Html.LabelFor(model => model.CategoryId, "Category")
                        </label>
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="BrandId" class="form-label fw-bold">
                            @Html.LabelFor(model => model.BrandId, "Brand")
                        </label>
                        @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="Weight" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Weight, "Weight")
                        </label>
                        @Html.TextBoxFor(model => model.Weight, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="Color" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Color, "Color")<span class="fw-normal text-danger">*</span>
                        </label>
                        @Html.TextBoxFor(model => model.Color, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="Size" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Size, "Size")<span class="fw-normal text-danger">*</span>
                        </label>
                        @Html.TextBoxFor(model => model.Size, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="Price" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Price, "Price")<span class="fw-normal text-danger">*</span>
                        </label>
                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <label for="Status" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Status, "Status")
                        </label>
                        <div class="form-check form-switch">
                            @Html.CheckBoxFor(model => model.Status, new { @class = "form-control, form-check-input", @checked = true })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="mb-2">
                        <label for="Hot" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Hot, "Hot")
                        </label>
                        <select class="form-select" aria-label="Default select example" name="Hot">
                            <option value="true">Yes</option>
                            <option value="false" selected>No</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Hot, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-3">
                        <label for="CategoryName" class="form-label fw-bold">
                            @Html.LabelFor(model => model.Description, "Description")
                        </label>
                        <textarea class="form-control" name="Description" rows="4"></textarea>
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                    <div class="mb-2">
                        <button type="submit" class="btn sub-button"><span class="sub-button-text">Add</span></button>
                        <a href="@Url.Action("Index", "Product", new { area = "Admin"})" class="btn cancel-button"><span class="cancel-button-text">Cancel</span></a>
                    </div>
                </form>
            </div>
        </div>
    }
</div>